#!/usr/bin/make -f
# -*- makefile -*-
# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

CXXFLAGS = -Wall -g -DNDEBUG -pipe

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CXXFLAGS += -O0
else
	CXXFLAGS += -O2
endif

config.status: configure
# Workaround to end up with a clean state equal to a fresh tarball unpack.
	-cp itpp-config.1 itpp-config.1.backup
	-cp itpp.spec itpp.spec.backup
	dh_testdir
	./configure --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) --prefix=/usr --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info CXXFLAGS="$(CXXFLAGS)" LDFLAGS="-Wl,-z,defs"

build: build-stamp

build-stamp: config.status
	dh_testdir
	$(MAKE)
	$(MAKE) check
	touch $@

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp config.log
	[ ! -f Makefile ] || $(MAKE) distclean
	rm -f config.status config.sub
# Workaround to end up with a clean state equal to a fresh tarball unpack.
	-mv itpp-config.1.backup itpp-config.1
	-mv itpp.spec.backup itpp.spec
	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	$(MAKE) DESTDIR=$(CURDIR)/debian/tmp install

binary-indep: build install

binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs ChangeLog
	dh_installdocs
	dh_install --sourcedir=debian/tmp
	dh_installman
	dh_link
	dh_strip --dbg-package=libitpp6-dbg
	dh_compress
	dh_fixperms
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch

.PHONY: build clean binary-indep binary-arch binary install 
